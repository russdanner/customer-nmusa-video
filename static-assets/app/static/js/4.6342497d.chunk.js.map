{"version":3,"sources":["components/Slide/Slide.js","components/Slider/Slider.js","containers/Home/Home.js"],"names":["Slide","clearInterval","this","interval","props","model","index","fieldId","slide","className","component","Link","to","url_s","style","backgroundImage","background_s","vod_s","title_t","logo_s","ReactHtmlParser","subtitle_s","Component","Slider","descriptorKey","Array","isArray","data","key","setState","getDescriptor","direction","slider","prev","next","onClick","changeSlide","icon","faAngleLeft","faAngleRight","descriptor","slides","slides_o","parseDescriptor","item","effect","ref","node","autoplay","map","i","length","renderSliderControls","descriptors","state","renderSlider","CATEGORIES_KEYS","Constants","FEATURED_VIDEOS","LATEST_VIDEOS","FEATURED_CHANNELS","Home","fetchCategories","setVideoDocked","descriptorUrl","nou","fetchContents","newProps","setHeaderGhost","page","slider_o","fetchContentsByCategory","getFeaturedVideoCategory","getLatestVideoCategory","getFeaturedChannelsCategory","console","log","category","searchByCategory","subscribe","res","hits","value","viewAll","order","query","numResults","maxVideosDisplay_i","sort","by","type","maxChannelsDisplay_i","categories","keys","push","shouldShowCats","every","VideoCategories","buildCategories","renderHomeContent","connect","store","videoStatus","video","craftercms","entries","dispatch","docked","url","ghost"],"mappings":"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","file":"static/js/4.6342497d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Field } from '@craftercms/experience-builder/react';\n\nclass Slide extends Component {\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { model, index, fieldId, slide } = this.props;\n\n    return (\n      <div className=\"discover-slider__inner\">\n        <Field\n          component={Link}\n          model={model}\n          fieldId={fieldId}\n          index={index}\n          className=\"discover-slider__link\"\n          to={slide.url_s}\n        >\n          <div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-mobile\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n            <div\n              className=\"image discover-slider__inner--background discover-slider__inner--background-desktop\"\n            >\n              <div\n                className=\"image__image\"\n                style={{ backgroundImage: `url(\"${slide.background_s}\")` }}\n              >\n              </div>\n            </div>\n          </div>\n          <div\n            className={`discover-slider__inner--content`}\n          >\n            {slide.vod_s &&\n            <div className=\"discover-slider__inner--vod\">\n              <Field\n                component=\"span\"\n                className=\"discover-slider__inner--vod-label\"\n                model={model}\n                index={index}\n                fieldId={`${fieldId}.vod_s`}\n              >\n                {slide.vod_s}\n              </Field>\n            </div>\n            }\n\n            <Field\n              component=\"h1\"\n              className=\"heading discover-slider__inner--title heading--medium heading--slider\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.title_t`}\n            >\n              {slide.title_t}\n            </Field>\n\n            {slide.logo_s &&\n            <div\n              className=\"discover-slider__inner--title discover-slider__inner--title--logo\"\n              style={{ backgroundImage: `url(\"${slide.logo_s}\")` }}\n            >\n            </div>\n            }\n\n            <Field\n              className=\"discover-slider__inner--subtitle\"\n              model={model}\n              index={index}\n              fieldId={`${fieldId}.subtitle_s`}\n            >\n              {ReactHtmlParser(slide.subtitle_s)}\n            </Field>\n          </div>\n        </Field>\n      </div>\n    );\n  }\n}\n\nexport default Slide;\n","import React, { Component } from 'react';\nimport { Carousel } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport SliderHolder from './SliderStyle';\nimport Slide from '../Slide/Slide';\nimport { parseDescriptor } from '@craftercms/content';\n\nclass Slider extends Component {\n  componentDidMount() {\n    const data = Array.isArray(this.props.data) ? this.props.data : [this.props.data],\n      descriptorKey = data[0].key;    // data is the list of descriptors (only 1 for this component)\n                                      // Studio may return an array but studio's item selector is configured to be\n                                      // max 1 item. So it'll always be first item of array\n    this.setState({ descriptorKey });\n    this.props.getDescriptor(descriptorKey);\n  }\n\n  changeSlide(direction) {\n\n    if ('previous' === direction) {\n      this.slider.prev();\n    } else {\n      this.slider.next();\n    }\n  }\n\n  renderSliderControls() {\n    return (\n      <div className=\"discover-slider__inner--nav\">\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-prev\"\n          onClick={() => this.changeSlide('previous')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleLeft} />\n        </label>\n        <label\n          className=\"discover-slider__inner--nav-button discover-slider__inner--nav-next\"\n          onClick={() => this.changeSlide('next')}\n        >\n          <FontAwesomeIcon className=\"nav-icon\" icon={faAngleRight} />\n        </label>\n      </div>\n    );\n  }\n\n  renderSlider(descriptor) {\n    var slides = descriptor.component.slides_o;\n    const model = parseDescriptor(descriptor);\n\n    if (!(slides.item instanceof Array)) {\n      slides = [slides.item];\n    } else {\n      slides = slides.item;\n    }\n\n    return (\n      <SliderHolder className=\"hero-container hero-container__ghost\">\n        <Carousel\n          className=\"discover-slider\"\n          effect=\"fade\"\n          ref={node => (this.slider = node)}\n          autoplay\n        >\n          {\n            slides.map((slide, i) => <Slide key={i} slide={slide} model={model} index={i} fieldId=\"slides_o\"/>)\n          }\n        </Carousel>\n\n        {slides.length > 1 &&\n        this.renderSliderControls()\n        }\n      </SliderHolder>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.descriptors && this.state && this.state.descriptorKey && this.props.descriptors[this.state.descriptorKey] &&\n        this.renderSlider(this.props.descriptors[this.state.descriptorKey])\n        }\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getDescriptor } from '@craftercms/redux';\nimport { setVideoDocked } from '../../actions/videoPlayerActions';\nimport { setHeaderGhost } from '../../actions/headerActions';\nimport Slider from '../../components/Slider/Slider';\nimport VideoCategories from '../../components/VideoCategories/VideoCategories';\n\nimport { nou } from '../../utils';\nimport { searchByCategory } from '../../libraries/search';\nimport { Constants } from '../../libraries/constants';\n\nconst CATEGORIES_KEYS = [Constants.FEATURED_VIDEOS, Constants.LATEST_VIDEOS, Constants.FEATURED_CHANNELS];\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchCategories: {},\n    };\n  }\n\n  componentWillMount() {\n    this.props.setVideoDocked(false);\n\n    this.descriptorUrl = '/site/website/index.xml';\n\n    if (nou(this.props.descriptors[this.descriptorUrl])) {\n      this.props.getDescriptor(this.descriptorUrl);\n    }\n  }\n\n  componentDidMount() {\n    // this.props.setHeaderGhost(true);\n    this.fetchContents(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchContents(newProps);\n  }\n\n  componentWillUnmount() {\n    this.props.setHeaderGhost(false);\n  }\n\n  renderSlider(descriptor) {\n    if (descriptor.page.slider_o.item) {\n      return (\n        <Slider\n          data={descriptor.page.slider_o.item}\n          getDescriptor={this.props.getDescriptor}\n          descriptors={this.props.descriptors}\n        >\n        </Slider>\n      );\n    }\n  }\n\n  fetchContents(props) {\n    const { descriptors } = props;\n    if (descriptors && descriptors[this.descriptorUrl]) {\n      const descriptor = descriptors[this.descriptorUrl];\n      if (!this.state.fetchCategories[Constants.FEATURED_VIDEOS]) {\n        this.fetchContentsByCategory(this.getFeaturedVideoCategory(descriptor));\n      }\n\n      if (!this.state.fetchCategories[Constants.LATEST_VIDEOS]) {\n        this.fetchContentsByCategory(this.getLatestVideoCategory(descriptor));\n      }\n\n      if (!this.state.fetchCategories[Constants.FEATURED_CHANNELS]) {\n        this.fetchContentsByCategory(this.getFeaturedChannelsCategory(descriptor));\n      }\n    }\n    else {\n      console.log(\"Error: No descriptors loaded.\")\n    }\n  }\n\n  fetchContentsByCategory(category) {\n    searchByCategory(category).subscribe(res => {\n      const { fetchCategories } = this.state;\n      category.hits = res.hits;\n      fetchCategories[category.key] = category;\n      this.setState({ fetchCategories });\n    });\n  }\n\n  getFeaturedVideoCategory(descriptor) {\n    return {\n      key: Constants.FEATURED_VIDEOS,\n      value: 'Featured Videos',\n      viewAll: false,\n      order: 0,\n      query: {\n        'bool': {\n          'filter': [\n            {\n              'bool': {\n                'should': [\n                  {\n                    'match': {\n                      'content-type': '/component/youtube-video'\n                    }\n                  },\n                  {\n                    'match': {\n                      'content-type': '/component/video-on-demand'\n                    }\n                  }\n                ],\n              }\n            },\n            {\n              'match': {\n                'featured_b': true\n              }\n            }\n          ]\n        }\n      },\n      numResults: descriptor.page.maxVideosDisplay_i\n    };\n  }\n\n  getLatestVideoCategory(descriptor) {\n    return {\n      key: Constants.LATEST_VIDEOS,\n      value: 'Latest Videos',\n      viewAll: false,\n      order: 1,\n      query: {\n        'bool': {\n          'filter': [\n            {\n              'bool': {\n                'should': [\n                  {\n                    'match': {\n                      'content-type': '/component/youtube-video'\n                    }\n                  },\n                  {\n                    'match': {\n                      'content-type': '/component/video-on-demand'\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        },\n      },\n      sort: {\n        by: 'date_dt',\n        order: 'desc'\n      },\n      numResults: descriptor.page.maxVideosDisplay_i\n    };\n  }\n\n  getFeaturedChannelsCategory(descriptor) {\n    return {\n      key: Constants.FEATURED_CHANNELS,\n      value: 'Featured Channels',\n      type: 'channel-card-alt',\n      order: 2,\n      query: {\n        'bool': {\n          'filter': [\n            {\n              'match': {\n                'content-type': '/component/component-channel'\n              }\n            },\n            {\n              'match': {\n                'featured_b': true\n              }\n            }\n          ]\n        }\n      },\n      numResults: descriptor.page.maxChannelsDisplay_i\n    };\n  }\n\n  buildCategories() {\n    const { fetchCategories } = this.state;\n    const categories = [];\n    const keys = CATEGORIES_KEYS;\n    for (let i = 0; i < keys.length; i += 1) {\n      const hasItems = fetchCategories[keys[i]] && fetchCategories[keys[i]].hits && fetchCategories[keys[i]].hits.length > 0;\n      if (hasItems) {\n        categories.push(fetchCategories[keys[i]]);\n      }\n    }\n\n    return categories;\n  }\n\n  renderHomeContent(descriptor) {\n    const shouldShowCats = CATEGORIES_KEYS.every(key => this.state.fetchCategories[key]);\n\n    return (\n      <div>\n        {this.renderSlider(descriptor)}\n        { shouldShowCats && (\n          <VideoCategories categories={this.buildCategories()} />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    var { descriptors } = this.props;\n\n    return (\n      <div>\n        { descriptors && descriptors[this.descriptorUrl] &&\n          this.renderHomeContent(descriptors[this.descriptorUrl])\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    videoStatus: store.video.videoStatus,\n    descriptors: store.craftercms.descriptors.entries\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return ({\n    setVideoDocked: (docked) => {\n      dispatch(setVideoDocked(docked));\n    },\n    getDescriptor: (url) => {\n      dispatch(getDescriptor(url));\n    },\n    setHeaderGhost: (ghost) => {\n      dispatch(setHeaderGhost(ghost));\n    }\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"],"sourceRoot":""}